// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Navigation should match the snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Navigation
    changeCategory={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <button
          className="people-button"
          name="People"
          onClick={[Function]}
>
          People
</button>,
        <button
          className="planets-button"
          name="Planets"
          onClick={[Function]}
>
          Planets
</button>,
        <button
          className="vehicles-button"
          name="Vehicles"
          onClick={[Function]}
>
          Vehicles
</button>,
        <button
          className="favorites-button"
          name="Favorites"
          onClick={[Function]}
>
          Favorites
</button>,
        <h3
          className="showSelectMessage"
>
          Select a category
</h3>,
      ],
      "className": "Navigation",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "People",
          "className": "people-button",
          "name": "People",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": "People",
        "type": "button",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Planets",
          "className": "planets-button",
          "name": "Planets",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": "Planets",
        "type": "button",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Vehicles",
          "className": "vehicles-button",
          "name": "Vehicles",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": "Vehicles",
        "type": "button",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Favorites",
          "className": "favorites-button",
          "name": "Favorites",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": "Favorites",
        "type": "button",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Select a category",
          "className": "showSelectMessage",
        },
        "ref": null,
        "rendered": "Select a category",
        "type": "h3",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <button
            className="people-button"
            name="People"
            onClick={[Function]}
>
            People
</button>,
          <button
            className="planets-button"
            name="Planets"
            onClick={[Function]}
>
            Planets
</button>,
          <button
            className="vehicles-button"
            name="Vehicles"
            onClick={[Function]}
>
            Vehicles
</button>,
          <button
            className="favorites-button"
            name="Favorites"
            onClick={[Function]}
>
            Favorites
</button>,
          <h3
            className="showSelectMessage"
>
            Select a category
</h3>,
        ],
        "className": "Navigation",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "People",
            "className": "people-button",
            "name": "People",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": "People",
          "type": "button",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Planets",
            "className": "planets-button",
            "name": "Planets",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": "Planets",
          "type": "button",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Vehicles",
            "className": "vehicles-button",
            "name": "Vehicles",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": "Vehicles",
          "type": "button",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Favorites",
            "className": "favorites-button",
            "name": "Favorites",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": "Favorites",
          "type": "button",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Select a category",
            "className": "showSelectMessage",
          },
          "ref": null,
          "rendered": "Select a category",
          "type": "h3",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
